from typing import List, Optional, Callable, Hashable, Tuple, Union

class Signal:
    def __init__(self, providing_args: Optional[List[]] = ..., use_caching: bool = ...) -> None: ...
    def connect(self, receiver: Callable, sender: Any = ..., weak: bool = ..., dispatch_uid: Optional[Hashable] = ...) -> None: ...
    def disconnect(self, receiver: Callable, sender: Any = ..., dispatch_uid: Optional[Hashable] = ...) -> None: ...
    def send(self, sender: Any, **named) -> List[Any]: ...
    def send_robust(self, sender: Any, **named) -> List[Any]: ...

def receiver(signal: Union[Signal, List[Signal], Tuple[Signal]], **kwargs) -> Callable: ...